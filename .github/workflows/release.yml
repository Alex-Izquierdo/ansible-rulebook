name: Release Workflow

on:
  release:
    types: [published]

jobs:
  check_permissions:
    runs-on: ubuntu-latest
    steps:
      - name: Check if user is a maintainer
        env:
          ACTOR: ${{ github.actor }}
          REPO: ${{ github.repository }}
        run: |
          ROLE=$(gh api \
          "/repos/$REPO/collaborators/$ACTOR/permission" --jq '.role_name')

          if [[ "$ROLE" != "admin" && "$ROLE" != "maintain" ]]; then
            echo "ðŸš¨ User $ACTOR is not authorized."
            exit 1
          fi
          echo "âœ… User $ACTOR is authorized."

  build:
    needs: check_permissions
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build package
        run: make dist

      - name: Upload artifacts to GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          RELEASE_TAG: ${{ github.event.release.tag_name }}
          RELEASE_ID: ${{ github.event.release.id }}
        run: |
          gh release upload "$RELEASE_TAG" dist/* --repo "$GITHUB_REPOSITORY"

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          repository-url: https://test.pypi.org/legacy/

